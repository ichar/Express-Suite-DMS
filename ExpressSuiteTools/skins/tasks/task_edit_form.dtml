<dtml-var simple_html_header>

<script type="text/javascript" src="&dtml-portal_url;/cleanup.js"></script>

<script language="JavaScript">
<!--
<dtml-var "getJSCleanerAttrsForCategory(context=this(), category='response')">

function EditDisableForm(frm) {
    frm.OK.disabled=true;
    frm.cancel.disabled=true;
}

function EditSubmitForm() {
    var frm = document.followup;
    if (Validate(frm)) {
        EditDisableForm(frm);
        CheckAndRefreshCommentFields(frm, ['description']);
        frm.submit();
    }
}
//-->
</script>

<dtml-let container="this()"
          user="portal_membership.getAuthenticatedMember()"
          IsManager="user.IsManager()"
          action="_.has_key('action') and _.getitem('action') or 'edit'"
          IsEdit="action=='edit'"
          base="_.has_key('getBase') and getBase() or container"

          editable_fields="IsEdit and TaskTemplateDefinition('_allow_edit') or []"
          IsSubTask="not _.has_key('brains_type') and 1 or 0"
          brains_type="IsSubTask and 'directive' or brains_type"
          IsDirective="brains_type=='directive' and 1 or 0"
          IsNotRequest="brains_type in ['directive','information','registration'] and 1 or 0"
          IsNotSignatureRequest="brains_type not in ['signature_request'] and 1 or 0"
          alarm_settings="IsEdit and AlarmSettings() or {'type':'percents', 'value':10, 'include_descr':0, 'note':'требуется доработка отчёта'}"
          finalize_settings="IsEdit and FinalizeSettings() or {}"
          auto_finalize="finalize_settings.has_key('auto') and finalize_settings['auto'] and not IsSubTask"
          delegation_of_authority="not finalize_settings.has_key('delegate') and -1 or finalize_settings['delegate']"

          IsDelegationOfAuthorityAllowed="delegation_of_authority > -1 or IsEdit and TaskTemplateDefinition('_delegation_of_authority') or IsDirective"
          IsFinalizeSettingsAllowed="finalize_settings.has_key('type') and 1 or 0"
          IsConfirmByTurn="_.getattr(container, 'confirm_by_turn', None)"
          IsCycleByTurn="_.getattr(container, 'cycle_by_turn', None)"
          IsRootAutomatedItem="IsEdit and isTaskAutomated() and not isBoundTo(task_only=1) and 1 or 0"
          IsAdditionalOptions="brains_type in ['request'] and 1 or 0"
          IsPeriodicalAllowed="0"

          wizard_data="_.has_key('wizard_data_id') and getSession(wizard_data_id)"
          default="wizard_data and wizard_data.get('task_form')
                 or IsEdit and { 'title': Title()
                               , 'description': Description(clean=1)
                               , 'effective_date': effective()
                               , 'expiration_date': expires()
                               , 'plan_time': getPlanTime()
                               , 'alarm_settings': alarm_settings
                               , 'periodical': Frequency() and 'checked'
                               , 'frequency_time': Frequency()
                               , 'duration_time': Duration()
                               , 'involved_users': listInvolvedUsers()
                               , 'supervisors': listSupervisors()
                               , 'notify_mode': getNotifyMode()
                               , 'disabled': 0
                               }
                 or { 'title': ''
                    , 'description': not implements('isPortalRoot') and Title() or ''
                    , 'effective_date': ZopeTime()
                    , 'expiration_date': ZopeTime() + 1.0
                    , 'plan_time': 0
                    , 'alarm_settings': {'type': 'percents', 'value': 10, 
                                         'include_descr': 0,
                                         'note': msg('write up a report')}
                    , 'periodical': ''
                    , 'frequency_time': 0
                    , 'duration_time': 0
                    , 'involved_users': []
                    , 'supervisors': None
                    , 'notify_mode': None
                    }
                  "
          IsDebug="0"
>
<dtml-if IsDebug>
  :<dtml-var finalize_settings>:<br>:<dtml-var delegation_of_authority>:<br>:<dtml-var IsDelegationOfAuthorityAllowed>:
</dtml-if>

<script type="text/javascript">
<!--
function switchFinalize( checked ) {
    var obj = document.all.finalize_state;
    if( typeof(obj) != 'object' ) return;
    obj.style.display = ( checked ? 'none' : 'block' );
}

function switchScheduleControls( frm, state ) {
  var dates = ['duration_time', 'frequency_time'];
  var parts = ['_days', '_hours', '_minutes'];

  for (var i=0; i<dates.length; i++) {
    for (var j=0; j<parts.length; j++) {
      var obj=dates[i] + parts[j];
      if(typeof(frm[obj]) == 'object') { setControlState(frm, obj, state); }
    }
  }
	  
  if(!state) {
    for (var i=0; i<dates.length; i++) {
      for (var j=0; j<parts.length; j++) {
        var obj=dates[i] + parts[j];
        if(typeof(frm[obj]) == 'object') { frm[obj].value = 0; }
      }
    }
  }
}

function Validate( frm, save_template ) {
  dateTimeRegexp.exec(frm.effective_date.value);
  var effective_date = new Date(RegExp.$3,RegExp.$2-1,RegExp.$1,RegExp.$5,RegExp.$6);
  dateTimeRegexp.exec(frm.expiration_date.value);
  var expiration_date = new Date(RegExp.$3,RegExp.$2-1,RegExp.$1,RegExp.$5,RegExp.$6);
  var involved_users_disabled = ( document.getElementById('involved_users_disabled') ? 1 : 0 );
  var involved_users = frm.involved_selected_users;

  if( !save_template && !frm.title.value ) {
     alert('<dtml-var "msg('Please specify task title')">');
     return false;
  }

<dtml-if "meta_type=='Task Item'">
  var start_date = new Date(<dtml-var "container.effective().strftime('%Y, %m-1, %d')">, 00, 00, 00);
  var end_date = new Date(<dtml-var "container.expiration_date.strftime('%Y, %m-1, %d')">, 23, 59, 59);
  if( end_date.valueOf() <= start_date.valueOf() ) {
     var output='<dtml-var "msg('Effective date must be smaller than Expiration date')">!';
     alert(output);
     frm.expiration_date.focus();
     return false;
  } else
  if( effective_date.valueOf() < start_date.valueOf() || effective_date.valueOf() > end_date.valueOf()) {
     var output='<dtml-var "msg('Effective date must confirm interval')">' +' (' + start_date.getDate() +'.'+ (start_date.getMonth()+1)+'.'+ start_date.getFullYear();
     output += ' ... ' + end_date.getDate() +'.'+ (end_date.getMonth() + 1)+'.'+ end_date.getFullYear()+').';
     //alert(output);
     if(!confirm('<dtml-var "msg('The effective date outside of root task due date. Continue?')">')) {
         frm.effective_date.focus();
         return false;
     }
  } else
  if( expiration_date.valueOf() > end_date.valueOf() || start_date.valueOf() > end_date.valueOf()) {
     var output='<dtml-var "msg('Expiration date must confirm interval')">' +' (' + start_date.getDate() +'.'+ (start_date.getMonth() + 1)+'.'+ start_date.getFullYear();
     output += ' ... ' + end_date.getDate() +'.'+ (end_date.getMonth() + 1)+'.'+ end_date.getFullYear()+').';
     output += ' ' + expiration_date.getDate() +'.'+ (expiration_date.getMonth() + 1)+'.'+ expiration_date.getFullYear();
     //var out_date = effective_date.getDate();
     if(!confirm('<dtml-var "msg('The expiration date outside of root task due date. Continue?')">')) {
         frm.expiration_date.focus();
         return false;
     }
  }
</dtml-if>

  if( expiration_date <= effective_date ) {
     alert('<dtml-var "msg('Effective date must be smaller than Expiration date')">!');
     frm.expiration_date.focus();
     return false;
  }

  if( document.getElementById('at_percents').checked ) {
     var value = frm['alarm_percents:int'].value;
     if( isNaN(value) || value <= 0 || value >= 100 ) {
         alert('<dtml-var "msg('Positive integer less than 100 required')">');
         return false; 
     }
  } else {
     if( document.getElementById('at_periodical').checked ) {
         var value = frm['alarm_period:int'].value;
         if( isNaN(value) || value <= 0 ) {
             alert('<dtml-var "msg('Positive integer required')">');
             return false;
         }
     }
  }

<dtml-if "not (IsConfirmByTurn or IsCycleByTurn or IsRootAutomatedItem)">
  if( !involved_users_disabled && !involved_users.options.length ) {
     alert('<dtml-var "msg('Please specify responsible members')">');
     return false;
  }

  var periodical = document.getElementById('periodical');
  if( periodical != null && typeof(periodical) == 'object' && periodical.checked ) {
      if(!checkSelectedDateTime( frm, 'frequency_time' )) {
          alert('<dtml-var "msg('Frequency time required')">');
          return false; 
      }
      if(!checkSelectedDateTime( frm, 'duration_time' )) {
          alert('<dtml-var "msg('Duration time required')">');
          return false; 
      }
  }

  if( save_template && !frm['template_name'].value ) {
      alert('<dtml-var "msg('Please specify template title')">');
      return false;
  }
</dtml-if>

  if( !involved_users_disabled ) selectAll(frm.involved_selected_users);
  if( typeof(frm.supervisors_selected_users) == 'object' ) selectAll(frm.supervisors_selected_users);
  selectAll(frm['alarm_dates:list']);
  if( validateForm(frm) ) {
      frm.effective_date.disabled = false;
      frm.expiration_date.disabled = false;
      return true;
  } else return false;
}

function checkSelectedDateTime( frm, id ) {
  var parts = ['_days', '_hours', '_minutes'];
  var results = 0;

  for( var i=0; i<parts.length; i++ ) {
      var obj = frm[id+parts[i]];
      if( typeof(obj) == 'object' ) {
          var value = obj.value;
          if( !isNaN(value) && value > 0 && value < 61 ) {
              results += 1;
          }
      }
  }

  if( results > 0 ) return true;
  return false;
}

function sendForm( action ) {
  var frm = document.forms['followup'];
  frm.action='portal_membership/processTemplateActions';
  frm.template_action.value = action;
  if (action == 'delete_template' || Validate(frm,true)) frm.submit();
}
  
function setTemplate( list_name ) {
  var frm = document.forms['followup'];
  var supervisors = frm.supervisors_selected_users;
  var templates = new Array(
    <dtml-try>
    <dtml-in "portal_membership.listTaskTemplates().items()" prefix="t">
      ['&dtml-t_key;', '<dtml-var "t_item['name']">', '<dtml-var "t_item['supervisors']">', 
       <dtml-var "t_item['responsible_users']">]<dtml-unless t_end>, </dtml-unless>
    </dtml-in>
    <dtml-except></dtml-try>
    );

  var template_list = frm[list_name];
  var template_id = template_list.options[template_list.selectedIndex].value;

  for( var i=0; i < templates.length; i++ ) {
    if( templates[i][0] == template_id ) {
      frm.template_name.value = templates[i][1];
      //select supervisors
      if( typeof(supervisors) == 'object' ) {
        for( var su=0; su < supervisors.options.length; su++ ) {
          supervisors.options[su].selected = false;
          if( supervisors.options[su].value == templates[i][2] ) {
            supervisors.options[su].selected = true;
          }
        }
      }
      //clear and fill up involved users
      var destList = frm.involved_selected_users;
      clearList(destList);
      fillupUserList(destList, frm.involved_all_users, frm.involved_all_groups, templates[i][3])
    }
  }
}

function toggleList( event ) {
  var element = getEventTarget(event);
  if (userAgent.MZ && element.tagName == 'LABEL') {
    element = document.getElementById(element.htmlFor);
  }
  if (element.type == 'radio') {
    if (element.value == 'custom' && element.checked) {
      displayElements(['dates_list']);
    }
    else {
      displayElements(null, ['dates_list']);
    }
  }
}

function checkDates( date ) {
  return false;
<dtml-if "meta_type=='Task Item'">
  start_date = new Date(<dtml-var "container.effective().strftime('%Y, %m-1, %d')">, 00, 00, 00);
  end_date = new Date(<dtml-var "container.expiration_date.strftime('%Y, %m-1, %d')">, 23, 59, 59);
  return date.valueOf() > end_date.valueOf() || date.valueOf() < start_date.valueOf();
<dtml-else>
  return false;
</dtml-if>
}

function changeSupervisor() {
  var supervisors = document.all.supervisors_selected_users;
  var disabled = ( supervisors.selectedIndex == 0 ? true : false );
  var obj = document.all.managed_by_supervisor_default;
  if( typeof(obj) == 'object' ) obj.disabled = disabled;
  var obj = document.all.managed_by_supervisor_request;
  if( typeof(obj) == 'object' ) obj.disabled = disabled;
  var obj = document.all.managed_by_supervisor_info;
  if( typeof(obj) == 'object' ) obj.disabled = disabled;
}
//-->
</script>

<dtml-if expr="not _.hasattr(container, 'followup') and container.meta_type != 'Task Item'">
  <dtml-call expr="portal_followup.getTasksFor(container)">
</dtml-if>

<div class="Desktop" id="task_edit_container">

<form name="followup" method="post" action="&dtml-absolute_url;/followup/task_edit">
<input type="hidden" name="delegation_of_authority_allowed" value="<dtml-var "IsDelegationOfAuthorityAllowed and 1 or ''">" />
<input type="hidden" name="template_action" value="">
<input type="hidden" name="notify_after_commit" value="">
<input type="hidden" name="no_commit" value="1">

<dtml-if "meta_type=='Task Item'"><h3><dtml-var aboveInThread></h3></dtml-if>

<dtml-if wizard_data_id>
<input type="hidden" name="wizard_data_id" value="&dtml-wizard_data_id;">
</dtml-if>

<dtml-if IsEdit>
<input type="hidden" name="task_id" value="&dtml-getId;">
</dtml-if>

<dtml-if "not IsSubTask and brains_type">
<input type="hidden" name="brains_type" value="&dtml-brains_type;">
</dtml-if>

<dtml-if auto_finalize>
<input type="hidden" name="auto_finalize" value="1">
</dtml-if>

<table width="100%" cellspacing="1" cellpadding="3" bgColor="#FFFFFF" border="0">
<COLGROUP>
<COL style="WIDTH:260px">
<COL style="WIDTH:70%">

<tr class="row_odd">
  <td class="smallHeader" colspan="2">
    <dtml-if IsEdit><dtml-var "msg('Task details')"><dtml-else><dtml-var "msg('New task details')"></dtml-if>:
  </td>
</tr>

<dtml-if "not IsEdit">
<tr class="row_even">
  <td class="smallHeader"><dtml-var "msg('Task type')"></td>
  <dtml-if IsSubTask>
  <td style="width:60%">
    <select name="brains_type" size="1">
    <option value="directive" selected> <dtml-var "msg('directive')"> </option>
    <option value="request"> <dtml-var "msg('request')"> </option>
    <option value="information"> <dtml-var "msg('information')"> </option>
    </select>
  </td>
  <dtml-elif brains_type>
  <td class="smallHeader" style="width:60%">
    <dtml-var "msg(brains_type, add=0)">
  </td>
  </dtml-if>
</tr>
</dtml-if>

<tr class="row_even">
  <td class="smallHeader" nowrap><dtml-var "msg('Task title')"></td>
  <td><input name="title" style="width:100%" value="<dtml-var "default.get('title')" html_quote>"></td>
</tr>
<tr class="row_even">
  <td class="smallHeader" nowrap><dtml-var "msg('Task description')"></td>
  <td>
  <dtml-let comment_title="IsSubTask and 'subtask instruction' or '%s instruction' % brains_type"
            context="'task.%s' % brains_type"
            notes="'' # IsDirective and '<b>%s&nbsp;<br>%s&nbsp;-&nbsp;</b>' % (msg('resp.'), msg('Deadline')) or ''"
            comment_rows="getCustomDefinitions('comment_rows', context=base)"
            padding="'0 0 0 0'">
    <dtml-call "REQUEST.set('comment_title', comment_title)">
    <dtml-call "REQUEST.set('comment_type', 'div')">
    <dtml-call "REQUEST.set('comment_rows', comment_rows)">
    <dtml-var "comment_template(container, form='followup', field='description', context=context, value=default.get('description'), notes=notes, padding=padding)">
  </dtml-let>
  </td>
</tr>

<tr class="row_even">
  <td class="smallHeader"><dtml-var "msg('Effective date')"></td>
  <td>
    <table cellspacing="0" cellpadding="0" border="0">
    <tr>
      <td class="small">
        <dtml-var "datetime_form( container
          , prefix='effective_date'
          , date=default.get('effective_date')
          , fast_input=1 
          , disableFunc='checkDates'
          , disabled=default.get('disabled')
          )">
      </td>
    </tr>
    </table>
  </td>
</tr>

<tr class="row_even">
  <td class="smallHeader"><dtml-var "msg('Expiration date')"></td>
  <td>
    <table cellspacing="0" cellpadding="0" border="0">
    <tr>
      <td class="small">
        <dtml-var "datetime_form( container
          , prefix='expiration_date'
          , date=default.get('expiration_date')
          , fast_input=1
          , disableFunc='checkDates'
          , disabled=default.get('disabled')
	      )">
      </td>
    </tr>
    </table>
  </td>
</tr>

<dtml-if "base is not None and base.implements('isDocument')">
  <dtml-let category_id="_['category'] or base.Category()"
            c_object="portal_metadata.getCategoryById(category_id)"
            state="portal_workflow.getInfoFor(base, 'state', '')">
    <dtml-if "c_object is not None and state">
      <dtml-let wf="c_object.Workflow()"
                disable_brains_type="portal_workflow.getStateDisableBrainsType(wf, state)">
        <dtml-if disable_brains_type>
<tr class="row_even">
  <td class="smallHeader">&nbsp;</td>
  <td>
    <table cellspacing="0" cellpadding="0" border="0">
    <tr>
      <td class="small" valign="top" style="padding: 0 4px 0 -3px;">
        <input type="checkbox" id="shelve_task" name="disable" value="1" <dtml-if "disable_brains_type==brains_type">checked</dtml-if> />
      </td>
      <td>
        <label for="shelve_task"><b><font color="#800080"><dtml-var "msg('The task will be disabled from duty list while you activate it later')"></font></b></label>
      </td>
    </tr>
    </table>
  </td>
</tr>
        </dtml-if>
      </dtml-let>
    </dtml-if>
  </dtml-let>
</dtml-if>

<tr class="row_even">
  <td class="small" nowrap><dtml-var "msg('Plan time')">&nbsp;</td>
  <td>
    <table cellspacing="0" cellpadding="0" border="0">
    <tr>
      <td class="small">
        <dtml-var "dateperiod_form( container, prefix='plan_time', period=default.get('plan_time') or 0 )">
      </td>
    </tr>
    </table>
  </td>
</tr>

<dtml-if "IsEdit and IsAdditionalOptions">
<tr class="row_even">
  <td><strong><dtml-var "msg('Use automatical notification')"></strong></td>
  <td>
    <table cellspacing="0" cellpadding="0" border="0">
    <tr>
      <td class="small" valign="top" style="padding: 0 4px 0 -3px;">
        <input type="checkbox" id="notify_mode" name="notify_mode" value="1" <dtml-var "default.get('notify_mode')" fmt="checked"> />
      </td>
      <td>
        <label for="notify_mode"><b><font color="#800080"><dtml-var "msg('In this mode involved user will receive all automatical notifications')"></font></b></label>
      </td>
    </tr>
    </table>
  </td>
</tr>
</dtml-if>
  
<dtml-let default_settings="default.get('alarm_settings')">
  <dtml-if default_settings>
<tr class="row_even">
  <td class="smallHeader"><dtml-msg "Send reminders">&nbsp;</td>
  <td onClick="toggleList(event)">
    <dtml-let checked="default_settings['type'] == 'percents'"
              value="not checked and 10 or default_settings['value']"
    >
      <input type="radio" name="alarm_type" value="percents" id="at_percents"
      <dtml-var checked fmt="checked">>
      <label for="at_percents">
      <dtml-msgtext>
        Before <input type="text" name="alarm_percents:int" value="&dtml-value;" size="2">%% till expiration
      </dtml-msgtext>
      </label><br>
    </dtml-let>

    <dtml-let checked="default_settings['type'] == 'periodical'"
              value="not checked and 1 or default_settings['value']"
              type="checked and default_settings['period_type']"
    >
      <input type="radio" name="alarm_type" value="periodical" id="at_periodical"
      <dtml-var checked fmt="checked">>
      <label for="at_periodical">
      <dtml-msg "Every"> 
      <input type="text" name="alarm_period:int" value="&dtml-value;" size="2">
      <select name="alarm_period_type">
      <dtml-in "'minutes', 'hours', 'days', 'months'" prefix="d">
      <option value="&dtml-d_item;" <dtml-var "d_item == type" fmt="selected">><dtml-msg expr=d_item>
      </dtml-in>
      </select>
      </label><br>
    </dtml-let>

    <dtml-let checked="default_settings['type'] == 'custom'"
              value="checked and default_settings['value'] or []"
              style="not checked and 'display: none' or ''"
    >
      <input type="radio" name="alarm_type" value="custom" id="at_custom"
      <dtml-var checked fmt="checked">>
      <label for="at_custom"><dtml-msg "Using dates list">&nbsp;...</label><br>
      <dtml-var "dates_list(None, _, name='alarm_dates', value=value, extra_attrs={'id': 'dates_list', 'style': style})">
    </dtml-let>

    <dtml-let checked="default_settings['type'] == 'disable'">
      <input type="radio" name="alarm_type" value="disable" id="at_disable"
      <dtml-var checked fmt="checked">>
      <label for="at_disable"><dtml-msg "Do not send"></label><br>
    </dtml-let>
  </td>
</tr>

<tr class="row_even">
  <td class="smallHeader"><dtml-msg "Reminders text">&nbsp;</td>
  <td>
    <table cellspacing="0" cellpadding="0" border="0">
    <tr>
      <td class="small" valign="top" style="padding: 0 4px 0 -3px;">
        <input type="checkbox" name="alarm_includes_descr" id="aid"
        <dtml-var "default_settings['include_descr']" fmt="checked"> />
      </td>
      <td align="left" style="width:99%;">
        <label for="aid"><b><dtml-msg "Include task description"></b></label>
      </td>
    </tr>
    <tr>
      <td colspan="2" style="width:100%;">
        <textarea name="alarm_note" rows="5" style="width:100%;" id="an"><dtml-var "default_settings['note'] or ''" html_quote></textarea>
      </td>
    </tr>
    </table>
  </td>
</tr>
  </dtml-if>
</dtml-let>

<dtml-if IsPeriodicalAllowed>
<tr class="row_odd">
  <td class="smallHeader" colspan="2" nowrap>
    <input type="checkbox" id="periodical" name="periodical" value="1" 
           onClick="switchScheduleControls(this.form, this.checked); document.followup.task_elaborate_button.disabled = ! document.followup.task_elaborate_button.disabled;"
           <dtml-var "default.get('periodical')"> />
    <label for="periodical"><dtml-var "msg('Scheduled task')">:</label>
  </td>
</tr>
<tr class="row_even">
  <td class="small"><dtml-var "msg('Repeat every')"></td>
  <td>
    <table cellspacing="0" cellpadding="0" border="0">
    <tr>
      <td class="small">
        <dtml-var "dateperiod_form( container
            , prefix='frequency_time'
            , period=default.get('frequency_time') or 0
            )">
      </td>
    </tr>
    </table>
  </td>
</tr>
<tr class="row_even">
  <td class="small"><dtml-var "msg('Duration')"></td>
  <td>
    <table cellspacing="0" cellpadding="0" border="0">
    <tr>
      <td class="small">
        <dtml-var "dateperiod_form( container
            , prefix='duration_time'
            , period=default.get('duration_time') or 0
            )">
      </td>
    </tr>
    </table>
  </td>
</tr>
</dtml-if>

<dtml-if "IsEdit and (IsConfirmByTurn or IsCycleByTurn or (IsRootAutomatedItem and not default.get('involved_users')))">
  <input type="hidden" name="involved_users_disabled" value="1">
<dtml-else>
<tr class="row_odd">
  <td class="smallHeader" colspan="2"><dtml-var "msg('Send task to the following users')">:</td>
</tr>
  <dtml-if "'involved_users' in editable_fields or not editable_fields">
<tr class="row_even">
  <td colspan="2">
    <table width="100%" cellpadding="0" border="0">
    <tr>
      <td align="left" style="vertical-align: middle;" nowrap><dtml-var "msg('Select template list')">:&nbsp;</td>
      <td>
        <select name="template_list" id="template_list"
          <dtml-unless "portal_membership.listTaskTemplates().items()">disabled</dtml-unless> />
          <dtml-in "portal_membership.listTaskTemplates().items()" prefix="t">
        <option value="<dtml-var "t_key">"><dtml-var "t_item['name']" ></option>
          </dtml-in>
        </select>
      </td>
      <td width="80%">
        <nobr>
        &nbsp;
        <a href="javascript:setTemplate('template_list')"><img 
           name="load_template" src="&dtml-portal_url;/load_filter.gif" alt="<dtml-var "msg('Load template')">"></a>
        <a href="javascript:sendForm('delete_template')"><img 
           name="delete_template" src="&dtml-portal_url;/delete.gif" alt="<dtml-var "msg('Delete template')">"></a>
        &nbsp;
        </nobr>
      </td>
      <td align="right" style="vertical-align: middle;" nowrap>
        <dtml-var "msg('New template name')">:&nbsp;
      </td>
      <td>
        <input type="text" name="template_name" value="">
      </td>
      <td>
        <nobr>
        &nbsp;
        <a href="javascript:sendForm('create_new_template')"><img 
           name="create_new_template" src="&dtml-portal_url;/create_new_filter.gif" alt="<dtml-var "msg('Create template')">"></a>
        <a href="javascript:sendForm('save_template')"><img 
           name="save_template" src="&dtml-portal_url;/save.gif" alt="<dtml-var "msg('Save template')">"></a>
        </nobr>
      </td>
    </tr>
    </table>
  </td>
</tr>

<tr class="row_even">
  <td class="small" align="left" colspan="2">
    <dtml-if IsNotRequest>
      <dtml-var "user_list( container, 
          name='involved', 
          selected_users=default.get('involved_users'),
          title_selected='Responsible members', 
          style='width:512px;',
          size=12,
          selected_size=5,
          with_groups=1,
          IsAdvanced=1
      )">
    <dtml-else>
      <dtml-var "user_list( container, 
          name='involved', 
          selected_users=default.get('involved_users'),
          title_selected='Confirmation order', 
          style='width:512px;',
          size=12,
          selected_size=5,
          with_groups=1,
          IsAdvanced=1,
          no_sort=1
      )">
    </dtml-if>
  </td>
</tr>
  <dtml-else>
<tr class="row_even">
  <td colspan="2" class="small" align="left">
  <input type="hidden" name="involved_users_disabled" value="1">
  <dtml-in "default.get('involved_users')">
    <a href="javascript:OpenUserInfoWnd('&dtml-sequence-item;','')"><dtml-var "portal_membership.getMemberName(_['sequence-item'])"></a>
    <dtml-unless sequence-end><br></dtml-unless>
  </dtml-in>
  </td>
</tr>
  </dtml-if>

  <dtml-if IsFinalizeSettingsAllowed>
    <dtml-let display="delegation_of_authority==1 and 'none' or 'block'">
      <dtml-var task_finalize_settings>
    </dtml-let>
  </dtml-if>

  <dtml-if IsDelegationOfAuthorityAllowed>
<tr class="row_even">
  <td><strong><dtml-var "msg('Delegate members authority')"></strong></td>
  <td>
    <table cellspacing="0" cellpadding="0" border="0">
    <tr>
      <td class="small" valign="top" style="padding: 0 4px 0 -3px;">
        <input type="checkbox" id="delegation_of_authority" name="delegation_of_authority" value="1" <dtml-var "delegation_of_authority==1" fmt="checked"> onclick="javascript:switchFinalize(this.checked);" />
      </td>
      <td>
        <label for="delegation_of_authority"><b><font color="#800080"><dtml-var "msg('In this mode delegation of authority in groups is allowed')"></font></b></label>
      </td>
    </tr>
    </table>
  </td>
</tr>
  </dtml-if>
</dtml-if>

<dtml-if IsNotRequest>
<tr class="row_odd">
  <td class="smallHeader" nowrap colspan="2" align="left"><dtml-var "msg('Set supervisor')">:</td>
</tr>
<tr class="row_even">
  <dtml-let supervisors="default.get('supervisors')"
            selected_supervisors="_.same_type(supervisors, [], ()) and supervisors or [supervisors]"
            managed_by_supervisor="IsEdit and isManagedBySupervisor() or 'default'"
            isSelected="selected_supervisors[0]">
  <td class="small" style="padding-top:5px" align="left" colspan="2">
    <dtml-if "'supervisors' in editable_fields or not editable_fields">
      <dtml-var "user_list( container, 
          name='supervisors', 
          selected_users=selected_supervisors,
          title_selected='', 
          cscript='changeSupervisor();',
          style='width:512px;',
          size=8,
          selected_size=5,
          with_groups=1,
          IsAdvanced=1
      )">
    <dtml-else>
    <input type="hidden" name="supervisors_disabled" value="1">
      <dtml-in selected_supervisors>
    <font color="blue"><strong><dtml-var "member_name(container, member=_['sequence-item'])"></strong></font>
    <dtml-unless sequence-end><br></dtml-unless>
      </dtml-in>
    </dtml-if>
  </td>
</tr>
<tr class="row_even">
  <td align="left" valign="top" colspan="2">
    <dtml-let modes="portal_metadata.listSupervisorModes()">
      <dtml-in modes mapping>
        <dtml-if sequence-start>
    <table width="100%" cellspacing="0" cellpadding="0" border="0">
        </dtml-if>
    <tr>
      <td class="small" valign="top" style="padding: 0 4px 0 -3px;"><input <dtml-if "not isSelected">disabled</dtml-if> type="radio" id="managed_by_supervisor_&dtml-id;" name="managed_by_supervisor" value="&dtml-id;" <dtml-if "managed_by_supervisor==id">checked</dtml-if> /></td>
      <td style="width:100%"><label for="managed_by_supervisor_&dtml-id;"><b><font color="#800080"><dtml-var "msg(title)"></font></b></label></td>
    </tr>
        <dtml-if sequence-end>
    </table>
        </dtml-if>
      </dtml-in>
    </dtml-let>
  </td>
  </dtml-let>
</tr>
</dtml-if>

<tr>
  <td colspan="2">
	<input type="button" name="OK" value="<dtml-var "IsEdit and msg('Edit task') or msg('Add task')">" onclick="javascript:EditSubmitForm();">
    <input type="button" name="cancel" onClick="javascript:location.href='&dtml-absolute_url;'" value=" <dtml-var "msg('Cancel')"> ">
  </td>
</tr>
</table>

</form>

</div>

<dtml-if "container.implements('isDocument')"> 
<table width="100%" bgcolor="#F2F2F2" border="0">
<tr class="task_title">
  <td class="smallHeader"><dtml-var "msg('Document text')"></td>
</tr>
<tr>
  <td width="100%" bgcolor="#FFFFFF"><dtml-var "container.CookedBody(view=1, resolution=None)"></td>
</tr>
</table>
</dtml-if>

</dtml-let>

<script type="text/javascript">
<!--
  window.onload =
    function () {
      var frm = document.forms['followup'];
      if(typeof(frm['periodical']) == 'object') {
         switchScheduleControls(frm, frm['periodical'].checked);
      } else {
         switchScheduleControls(frm, null);
      }
      if (typeof(resolution_body) != 'object') return;
      resolution_body.style.top = task_edit_container.offsetHeight + 80;
      resolution_body.style.display = 'none';
    };
//-->
</script>

<dtml-var simple_html_footer>
